{"version":3,"file":"manekinekko-angular-web-bluetooth.js","sources":["ng://@manekinekko/angular-web-bluetooth/lib/platform/browser.ts","ng://@manekinekko/angular-web-bluetooth/lib/platform/server.ts","ng://@manekinekko/angular-web-bluetooth/lib/logger.service.ts","ng://@manekinekko/angular-web-bluetooth/lib/bluetooth.service.ts","ng://@manekinekko/angular-web-bluetooth/lib/bluetooth.module.ts","ng://@manekinekko/angular-web-bluetooth/lib/lang/uuids/ti-sensortag2.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise<BluetoothDevice> {\n    return this.ble.requestDevice(options);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { from, fromEvent, Observable, throwError } from 'rxjs';\nimport { filter, map, mergeMap, takeUntil } from 'rxjs/operators';\nimport { ConsoleLoggerService } from './logger.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\ntype ReadValueOptions = {\n  acceptAllDevices?: boolean;\n  optionalServices?: BluetoothServiceUUID[];\n  characteristic: BluetoothCharacteristicUUID,\n  service: BluetoothServiceUUID,\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BluetoothCore {\n  private device$: EventEmitter<BluetoothDevice>;\n  private gatt$: EventEmitter<BluetoothRemoteGATTServer>;\n  private characteristicValueChanges$: EventEmitter<DataView>;\n  private gattServer: BluetoothRemoteGATTServer;\n\n  constructor(private readonly webBle: BrowserWebBluetooth, private readonly console: ConsoleLoggerService) {\n\n    this.device$ = new EventEmitter<BluetoothDevice>();\n    this.gatt$ = new EventEmitter<BluetoothRemoteGATTServer>();\n    this.characteristicValueChanges$ = new EventEmitter<DataView>();\n\n    this.gattServer = null;\n  }\n\n  getDevice$(): Observable<BluetoothDevice> {\n    return this.device$;\n  }\n\n  getGATT$(): Observable<BluetoothRemoteGATTServer> {\n    return this.gatt$;\n  }\n\n  streamValues$(): Observable<DataView> {\n    return this.characteristicValueChanges$.pipe(filter(value => value && value.byteLength > 0));\n  }\n\n  /**\n   * Run the discovery process and read the value form the provided service and characteristic\n   * @param options the ReadValueOptions\n   */\n  async value(options: ReadValueOptions) {\n    this.console.log('[BLE::Info] Reading value with options %o', options);\n\n    if (typeof options.acceptAllDevices === 'undefined') {\n      options.acceptAllDevices = true;\n    }\n\n    if (typeof options.optionalServices === 'undefined') {\n      options.optionalServices = [options.service];\n    }\n    else {\n      options.optionalServices = [...options.optionalServices];\n    }\n\n    this.console.log('[BLE::Info] Reading value with options %o', options);\n\n    try {\n      const device = await this.discover({\n        acceptAllDevices: options.acceptAllDevices,\n        optionalServices: options.optionalServices\n      }) as BluetoothDevice;\n      this.console.log('[BLE::Info] Device info %o', device);\n\n      const gatt = await this.connectDevice(device);\n      this.console.log('[BLE::Info] GATT info %o', gatt);\n\n      const primaryService = await this.getPrimaryService(gatt, options.service) as BluetoothRemoteGATTService;\n      this.console.log('[BLE::Info] Primary Service info %o', primaryService);\n\n      const characteristic = await this.getCharacteristic(primaryService, options.characteristic) as BluetoothRemoteGATTCharacteristic;\n      this.console.log('[BLE::Info] Characteristic info %o', characteristic);\n\n      const value = await characteristic.readValue();\n      this.console.log('[BLE::Info] Value info %o', value);\n\n      return value;\n    }\n    catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  value$(options: ReadValueOptions) {\n    return from(this.value(options));\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param Options such as filters and optional services\n   * @return  The GATT server for the chosen device\n   */\n  async discover(options: RequestDeviceOptions = {} as RequestDeviceOptions) {\n    options.optionalServices = options.optionalServices || ['generic_access'];\n\n    this.console.log('[BLE::Info] Requesting devices with options %o', options);\n\n    let device = null;\n    try {\n      device = await this.webBle.requestDevice(options);\n      device.addEventListener('gattserverdisconnected', this.onDeviceDisconnected.bind(this));\n\n      if (device) {\n        this.device$.emit(device);\n      }\n      else {\n        this.device$.error(`[BLE::Error] Can not get the Bluetooth Remote GATT Server. Abort.`);\n      }\n\n    } catch (error) {\n      this.console.error(error);\n    }\n\n    return device;\n  }\n\n  /**\n   * This handler will trigger when the client disconnets from the server.\n   *\n   * @param event The onDeviceDisconnected event\n   */\n  onDeviceDisconnected(event: Event) {\n    const disconnectedDevice = event.target as BluetoothDevice;\n    this.console.log('[BLE::Info] disconnected device %o', disconnectedDevice);\n\n    this.device$.emit(null);\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param Options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  discover$(options?: RequestDeviceOptions): Observable<void | BluetoothRemoteGATTServer> {\n    return from(this.discover(options)).pipe(mergeMap((device: BluetoothDevice) => this.connectDevice$(device)));\n  }\n\n  /**\n   * Connect to current device.\n   *\n   * @return  Emites the gatt server instance of the requested device\n   */\n  async connectDevice(device: BluetoothDevice) {\n    if (device) {\n      this.console.log('[BLE::Info] Connecting to Bluetooth Remote GATT Server of %o', device);\n\n      try {\n        const gattServer = await device.gatt.connect();\n        this.gattServer = gattServer;\n        this.gatt$.emit(gattServer);\n        return gattServer;\n      } catch (error) {\n        // probably the user has canceled the discovery\n        Promise.reject(`${error.message}`);\n        this.gatt$.error(`${error.message}`);\n      }\n    } else {\n      this.console.error('[BLE::Error] Was not able to connect to Bluetooth Remote GATT Server');\n      this.gatt$.error(null);\n    }\n  }\n\n  /**\n   * Connect to current device.\n   *\n   * @return  Emites the gatt server instance of the requested device\n   */\n  connectDevice$(device: BluetoothDevice) {\n    return from(this.connectDevice(device));\n  }\n\n  /**\n   * Disconnect the current connected device\n   */\n  disconnectDevice() {\n    if (!this.gattServer) {\n      return;\n    }\n    this.console.log('[BLE::Info] Disconnecting from Bluetooth Device %o', this.gattServer);\n\n    if (this.gattServer.connected) {\n      this.gattServer.disconnect();\n    } else {\n      this.console.log('[BLE::Info] Bluetooth device is already disconnected');\n    }\n  }\n\n  /**\n   * Requests the primary service.\n   *\n   * @param gatt The BluetoothRemoteGATTServer sever\n   * @param service The UUID of the primary service\n   * @return The remote service (as a Promise)\n   */\n  async getPrimaryService(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Promise<BluetoothRemoteGATTService> {\n    try {\n      const remoteService = await gatt.getPrimaryService(service);\n      return await Promise.resolve(remoteService);\n    }\n    catch (error) {\n      return await Promise.reject(`${error.message} (${service})`);\n    }\n  }\n\n  /**\n   * Requests the primary service.\n   *\n   * @param gatt The BluetoothRemoteGATTServer sever\n   * @param service The UUID of the primary service\n   * @return The remote service (as an observable).\n   */\n  getPrimaryService$(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Observable<BluetoothRemoteGATTService> {\n    this.console.log('[BLE::Info] Getting primary service \"%s\" (if available) of %o', service, gatt);\n\n\n    if (gatt) {\n      return from(\n        this.getPrimaryService(gatt, service)\n      );\n    }\n    else {\n      return throwError(new Error('[BLE::Error] Was not able to connect to the Bluetooth Remote GATT Server'));\n    }\n  }\n\n  /**\n   * Requests a characteristic from the primary service.\n   *\n   * @param primaryService The primary service.\n   * @param characteristic The characteristic's UUID.\n   * @returns The characteristic description (as a Promise).\n   */\n  async getCharacteristic(\n    primaryService: BluetoothRemoteGATTService,\n    characteristic: BluetoothCharacteristicUUID\n  ): Promise<BluetoothRemoteGATTCharacteristic | void> {\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\n\n    try {\n      const char = await primaryService.getCharacteristic(characteristic);\n      // listen for characteristic value changes\n      if (char.properties.notify) {\n        char.startNotifications().then(_ => {\n          this.console.log('[BLE::Info] Starting notifications of \"%s\"', characteristic);\n          char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\n        }, (error: DOMException) => {\n          Promise.reject(`${error.message} (${characteristic})`);\n        });\n      }\n      else {\n        char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\n      }\n      return char;\n    }\n    catch (rejectionError) {\n      Promise.reject(`${rejectionError.message} (${characteristic})`);\n    }\n  }\n\n  /**\n   * Requests a characteristic from the primary service.\n   *\n   * @param primaryService The primary service.\n   * @param characteristic The characteristic's UUID.\n   * @returns The characteristic description (as a Observable).\n   */\n  getCharacteristic$(\n    primaryService: BluetoothRemoteGATTService,\n    characteristic: BluetoothCharacteristicUUID\n  ): Observable<void | BluetoothRemoteGATTCharacteristic> {\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\n\n    return from(this.getCharacteristic(primaryService, characteristic));\n  }\n\n  /**\n   * Sets the characteristic's state.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic\n   * @param state An ArrayBuffer containing the value of the characteristic.\n   * @return The primary service (useful for chaining).\n   */\n  setCharacteristicState(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state: ArrayBuffer) {\n    const primaryService = this.getPrimaryService$(this.gattServer, service);\n\n    primaryService\n      // tslint:disable-next-line: variable-name\n      .pipe(mergeMap((_primaryService: BluetoothRemoteGATTService) => this.getCharacteristic$(_primaryService, characteristic)))\n      // tslint:disable-next-line: no-shadowed-variable\n      .subscribe((characteristic: BluetoothRemoteGATTCharacteristic) => this.writeValue$(characteristic, state));\n\n    return primaryService;\n  }\n\n  /**\n   * Enables the specified characteristic of a given service.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic\n   * @return The primary service (useful for chaining).\n   */\n  enableCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\n    state = state || new Uint8Array([1]);\n    return this.setCharacteristicState(service, characteristic, state);\n  }\n\n  /**\n   * Disables the specified characteristic of a given service.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic.\n   * @return The primary service (useful for chaining).\n   */\n  disbaleCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\n    state = state || new Uint8Array([0]);\n    return this.setCharacteristicState(service, characteristic, state);\n  }\n\n  /**\n   * Dispatches new values emitted by a characteristic.\n   *\n   * @param event the distpatched event.\n   */\n  onCharacteristicChanged(event: Event) {\n    this.console.log('[BLE::Info] Dispatching new characteristic value %o', event);\n\n    const value = (event.target as BluetoothRemoteGATTCharacteristic).value;\n    this.characteristicValueChanges$.emit(value);\n  }\n\n  /**\n   * Reads a value from the characteristics, as a DataView.\n   *\n   * @param characteristic The requested characteristic.\n   * @return the DataView value (as an Observable).\n   */\n  readValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n    this.console.log('[BLE::Info] Reading Characteristic %o', characteristic);\n\n    return from(\n      characteristic\n        .readValue()\n        .then((data: DataView) => Promise.resolve(data), (error: DOMException) => Promise.reject(`${error.message}`))\n    );\n  }\n\n  /**\n   * Writes a value into the specified characteristic.\n   *\n   * @param characteristic The requested characteristic.\n   * @param value The value to be written (as an ArrayBuffer or Uint8Array).\n   * @return an void Observable.\n   */\n  writeValue$(characteristic: BluetoothRemoteGATTCharacteristic, value: ArrayBuffer | Uint8Array) {\n    this.console.log('[BLE::Info] Writing Characteristic %o', characteristic);\n\n    return from(characteristic.writeValue(value).then(_ => Promise.resolve(), (error: DOMException) => Promise.reject(`${error.message}`)));\n  }\n\n  /**\n   * A stream of DataView values emitted by the specified characteristic.\n   *\n   * @param characteristic The characteristic which value you want to observe\n   * @return The stream of DataView values.\n   */\n  observeValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n    characteristic.startNotifications();\n    const disconnected = fromEvent(characteristic.service.device, 'gattserverdisconnected');\n    return fromEvent(characteristic, 'characteristicvaluechanged')\n      .pipe(\n        map((event: Event) => (event.target as BluetoothRemoteGATTCharacteristic).value as DataView),\n        takeUntil(disconnected)\n      );\n  }\n\n  /**\n   * A utility method to convert LE to an unsigned 16-bit integer values.\n   *\n   * @param data The DataView binary data.\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\n   * @return An unsigned 16-bit integer number.\n   */\n  littleEndianToUint16(data: any, byteOffset: number): number {\n    // tslint:disable-next-line:no-bitwise\n    return (this.littleEndianToUint8(data, byteOffset + 1) << 8) + this.littleEndianToUint8(data, byteOffset);\n  }\n\n  /**\n   * A utility method to convert LE to an unsigned 8-bit integer values.\n   *\n   * @param data The DataView binary data.\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\n   * @return An unsigned 8-bit integer number.\n   */\n  littleEndianToUint8(data: any, byteOffset: number): number {\n    return data.getUint8(byteOffset);\n  }\n\n  /**\n   * Sends random data (for testing purposes only).\n   *\n   * @return Random unsigned 8-bit integer values.\n   */\n  fakeNext(fakeValue?: () => DataView) {\n    if (fakeValue === undefined) {\n      fakeValue = () => {\n        const dv = new DataView(new ArrayBuffer(8));\n        // tslint:disable-next-line:no-bitwise\n        dv.setUint8(0, (Math.random() * 110) | 0);\n        return dv;\n      };\n    }\n\n    this.characteristicValueChanges$.emit(fakeValue());\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n","// http://processors.wiki.ti.com/images/a/a8/BLE_SensorTag_GATT_Server.pdf\n\n// prettier-ignore\nexport const TiTag = {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n};\n\nexport const TI_SENSORAG_SERVICES = Object.keys(TiTag).map(key => TiTag[key].SERVICE);\n"],"names":[],"mappings":"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"}