{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@manekinekko/angular-web-bluetooth/lib/platform/browser.ts","ng://@manekinekko/angular-web-bluetooth/lib/platform/server.ts","ng://@manekinekko/angular-web-bluetooth/lib/logger.service.ts","ng://@manekinekko/angular-web-bluetooth/lib/bluetooth.service.ts","ng://@manekinekko/angular-web-bluetooth/lib/bluetooth.module.ts","ng://@manekinekko/angular-web-bluetooth/lib/lang/uuids/ti-sensortag2.ts"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","this","n","v","op","TypeError","call","pop","length","push","__read","o","m","r","i","ar","error","BrowserWebBluetooth","ble","navigator","bluetooth","Error","prototype","requestDevice","options","Injectable","ServerWebBluetooth","instance","ConsoleLoggerService","log","args","_i","arguments","console","warn","providedIn","NoLoggerService","BluetoothCore","webBle","device$","EventEmitter","gatt$","characteristicValueChanges$","gattServer","getDevice$","getGATT$","streamValues$","pipe","filter","byteLength","acceptAllDevices","optionalServices","service","concat","__spread","discover","device","_a","connectDevice","gatt","getPrimaryService","primaryService","getCharacteristic","characteristic","readValue","error_1","value$","from","addEventListener","onDeviceDisconnected","bind","emit","error_2","event","disconnectedDevice","discover$","_this","mergeMap","connectDevice$","connect","error_3","message","disconnectDevice","connected","disconnect","remoteService","error_4","getPrimaryService$","throwError","char_1","properties","notify","startNotifications","onCharacteristicChanged","rejectionError_1","getCharacteristic$","setCharacteristicState","state","_primaryService","subscribe","writeValue$","enableCharacteristic","Uint8Array","disbaleCharacteristic","readValue$","data","writeValue","observeValue$","disconnected","fromEvent","map","takeUntil","littleEndianToUint16","byteOffset","littleEndianToUint8","getUint8","fakeNext","fakeValue","undefined","dv","DataView","ArrayBuffer","setUint8","Math","random","browserWebBluetooth","consoleLoggerServiceConfig","enableTracing","makeMeTokenInjector","InjectionToken","WebBluetoothModule","forRoot","ngModule","providers","provide","useFactory","useValue","deps","NgModule","imports","CommonModule","TiTag","DEVICE_INFORMATION","SERVICE","SYSTEM_ID","MODEL_NUMBER","SERIAL_NUMBER","FIRMWARE_REV","HARDWARE_REV","SOFTWARE_REV","MANIFACTURER","IEEE11073","PNP_ID","BATTERY","LEVEL","TEMPERATURE","DATA","CONFIGURATION","PERIOD","HUMIDITY","BAROMETER","MOVEMENT","LIGHT","KEYPRESS","STATE","__REGISTER__","ADDRESS","DEVICE_ID","CONTROL","CURRENT_USED_PARAMETERS","REQUEST_NEW_PARAMETERS","DISCONNECT_REQUEST","OAD","IMAGE_NOTIFY","IMAGE_BLOCK_REQUEST","IMAGE_COUNT","IMAGE_STATUS","IO","CONFIG","TI_SENSORAG_SERVICES","Object","keys","key"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BrowserWebBluetooth {\n  private ble;\n\n  constructor() {\n    this.ble = navigator.bluetooth;\n    if (!this.ble) {\n      throw new Error('Your browser does not support Smart Bluetooth. See http://caniuse.com/#search=Bluetooth for more details.');\n    }\n  }\n\n  requestDevice(options: RequestDeviceOptions): Promise<BluetoothDevice> {\n    return this.ble.requestDevice(options);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ServerWebBluetooth {\n  static instance() {\n    // mocked object for now\n    return {};\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport interface Logger {\n  log(args: string[]): void;\n  error(args: string[]): void;\n  warn(args: string[]): void;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsoleLoggerService implements Logger {\n  log(...args) {\n    console.log.apply(console, args);\n  }\n  error(...args) {\n    console.error.apply(console, args);\n  }\n  warn(...args) {\n    console.warn.apply(console, args);\n  }\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NoLoggerService implements Logger {\n  log(...args) {}\n  error(...args) {}\n  warn(...args) {}\n}\n","import { EventEmitter, Injectable } from '@angular/core';\nimport { from, fromEvent, Observable, throwError } from 'rxjs';\nimport { filter, map, mergeMap, takeUntil } from 'rxjs/operators';\nimport { ConsoleLoggerService } from './logger.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\ntype ReadValueOptions = {\n  acceptAllDevices?: boolean;\n  optionalServices?: BluetoothServiceUUID[];\n  characteristic: BluetoothCharacteristicUUID,\n  service: BluetoothServiceUUID,\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BluetoothCore {\n  private device$: EventEmitter<BluetoothDevice>;\n  private gatt$: EventEmitter<BluetoothRemoteGATTServer>;\n  private characteristicValueChanges$: EventEmitter<DataView>;\n  private gattServer: BluetoothRemoteGATTServer;\n\n  constructor(private readonly webBle: BrowserWebBluetooth, private readonly console: ConsoleLoggerService) {\n\n    this.device$ = new EventEmitter<BluetoothDevice>();\n    this.gatt$ = new EventEmitter<BluetoothRemoteGATTServer>();\n    this.characteristicValueChanges$ = new EventEmitter<DataView>();\n\n    this.gattServer = null;\n  }\n\n  getDevice$(): Observable<BluetoothDevice> {\n    return this.device$;\n  }\n\n  getGATT$(): Observable<BluetoothRemoteGATTServer> {\n    return this.gatt$;\n  }\n\n  streamValues$(): Observable<DataView> {\n    return this.characteristicValueChanges$.pipe(filter(value => value && value.byteLength > 0));\n  }\n\n  /**\n   * Run the discovery process and read the value form the provided service and characteristic\n   * @param options the ReadValueOptions\n   */\n  async value(options: ReadValueOptions) {\n    this.console.log('[BLE::Info] Reading value with options %o', options);\n\n    if (typeof options.acceptAllDevices === 'undefined') {\n      options.acceptAllDevices = true;\n    }\n\n    if (typeof options.optionalServices === 'undefined') {\n      options.optionalServices = [options.service];\n    }\n    else {\n      options.optionalServices = [...options.optionalServices];\n    }\n\n    this.console.log('[BLE::Info] Reading value with options %o', options);\n\n    try {\n      const device = await this.discover({\n        acceptAllDevices: options.acceptAllDevices,\n        optionalServices: options.optionalServices\n      }) as BluetoothDevice;\n      this.console.log('[BLE::Info] Device info %o', device);\n\n      const gatt = await this.connectDevice(device);\n      this.console.log('[BLE::Info] GATT info %o', gatt);\n\n      const primaryService = await this.getPrimaryService(gatt, options.service) as BluetoothRemoteGATTService;\n      this.console.log('[BLE::Info] Primary Service info %o', primaryService);\n\n      const characteristic = await this.getCharacteristic(primaryService, options.characteristic) as BluetoothRemoteGATTCharacteristic;\n      this.console.log('[BLE::Info] Characteristic info %o', characteristic);\n\n      const value = await characteristic.readValue();\n      this.console.log('[BLE::Info] Value info %o', value);\n\n      return value;\n    }\n    catch (error) {\n      throw new Error(error);\n    }\n  }\n\n  value$(options: ReadValueOptions) {\n    return from(this.value(options));\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param Options such as filters and optional services\n   * @return  The GATT server for the chosen device\n   */\n  async discover(options: RequestDeviceOptions = {} as RequestDeviceOptions) {\n    options.optionalServices = options.optionalServices || ['generic_access'];\n\n    this.console.log('[BLE::Info] Requesting devices with options %o', options);\n\n    let device = null;\n    try {\n      device = await this.webBle.requestDevice(options);\n      device.addEventListener('gattserverdisconnected', this.onDeviceDisconnected.bind(this));\n\n      if (device) {\n        this.device$.emit(device);\n      }\n      else {\n        this.device$.error(`[BLE::Error] Can not get the Bluetooth Remote GATT Server. Abort.`);\n      }\n\n    } catch (error) {\n      this.console.error(error);\n    }\n\n    return device;\n  }\n\n  /**\n   * This handler will trigger when the client disconnets from the server.\n   *\n   * @param event The onDeviceDisconnected event\n   */\n  onDeviceDisconnected(event: Event) {\n    const disconnectedDevice = event.target as BluetoothDevice;\n    this.console.log('[BLE::Info] disconnected device %o', disconnectedDevice);\n\n    this.device$.emit(null);\n  }\n\n  /**\n   * Run the discovery process.\n   *\n   * @param Options such as filters and optional services\n   * @return  Emites the value of the requested service read from the device\n   */\n  discover$(options?: RequestDeviceOptions): Observable<void | BluetoothRemoteGATTServer> {\n    return from(this.discover(options)).pipe(mergeMap((device: BluetoothDevice) => this.connectDevice$(device)));\n  }\n\n  /**\n   * Connect to current device.\n   *\n   * @return  Emites the gatt server instance of the requested device\n   */\n  async connectDevice(device: BluetoothDevice) {\n    if (device) {\n      this.console.log('[BLE::Info] Connecting to Bluetooth Remote GATT Server of %o', device);\n\n      try {\n        const gattServer = await device.gatt.connect();\n        this.gattServer = gattServer;\n        this.gatt$.emit(gattServer);\n        return gattServer;\n      } catch (error) {\n        // probably the user has canceled the discovery\n        Promise.reject(`${error.message}`);\n        this.gatt$.error(`${error.message}`);\n      }\n    } else {\n      this.console.error('[BLE::Error] Was not able to connect to Bluetooth Remote GATT Server');\n      this.gatt$.error(null);\n    }\n  }\n\n  /**\n   * Connect to current device.\n   *\n   * @return  Emites the gatt server instance of the requested device\n   */\n  connectDevice$(device: BluetoothDevice) {\n    return from(this.connectDevice(device));\n  }\n\n  /**\n   * Disconnect the current connected device\n   */\n  disconnectDevice() {\n    if (!this.gattServer) {\n      return;\n    }\n    this.console.log('[BLE::Info] Disconnecting from Bluetooth Device %o', this.gattServer);\n\n    if (this.gattServer.connected) {\n      this.gattServer.disconnect();\n    } else {\n      this.console.log('[BLE::Info] Bluetooth device is already disconnected');\n    }\n  }\n\n  /**\n   * Requests the primary service.\n   *\n   * @param gatt The BluetoothRemoteGATTServer sever\n   * @param service The UUID of the primary service\n   * @return The remote service (as a Promise)\n   */\n  async getPrimaryService(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Promise<BluetoothRemoteGATTService> {\n    try {\n      const remoteService = await gatt.getPrimaryService(service);\n      return await Promise.resolve(remoteService);\n    }\n    catch (error) {\n      return await Promise.reject(`${error.message} (${service})`);\n    }\n  }\n\n  /**\n   * Requests the primary service.\n   *\n   * @param gatt The BluetoothRemoteGATTServer sever\n   * @param service The UUID of the primary service\n   * @return The remote service (as an observable).\n   */\n  getPrimaryService$(gatt: BluetoothRemoteGATTServer, service: BluetoothServiceUUID): Observable<BluetoothRemoteGATTService> {\n    this.console.log('[BLE::Info] Getting primary service \"%s\" (if available) of %o', service, gatt);\n\n\n    if (gatt) {\n      return from(\n        this.getPrimaryService(gatt, service)\n      );\n    }\n    else {\n      return throwError(new Error('[BLE::Error] Was not able to connect to the Bluetooth Remote GATT Server'));\n    }\n  }\n\n  /**\n   * Requests a characteristic from the primary service.\n   *\n   * @param primaryService The primary service.\n   * @param characteristic The characteristic's UUID.\n   * @returns The characteristic description (as a Promise).\n   */\n  async getCharacteristic(\n    primaryService: BluetoothRemoteGATTService,\n    characteristic: BluetoothCharacteristicUUID\n  ): Promise<BluetoothRemoteGATTCharacteristic | void> {\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\n\n    try {\n      const char = await primaryService.getCharacteristic(characteristic);\n      // listen for characteristic value changes\n      if (char.properties.notify) {\n        char.startNotifications().then(_ => {\n          this.console.log('[BLE::Info] Starting notifications of \"%s\"', characteristic);\n          char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\n        }, (error: DOMException) => {\n          Promise.reject(`${error.message} (${characteristic})`);\n        });\n      }\n      else {\n        char.addEventListener('characteristicvaluechanged', this.onCharacteristicChanged.bind(this));\n      }\n      return char;\n    }\n    catch (rejectionError) {\n      Promise.reject(`${rejectionError.message} (${characteristic})`);\n    }\n  }\n\n  /**\n   * Requests a characteristic from the primary service.\n   *\n   * @param primaryService The primary service.\n   * @param characteristic The characteristic's UUID.\n   * @returns The characteristic description (as a Observable).\n   */\n  getCharacteristic$(\n    primaryService: BluetoothRemoteGATTService,\n    characteristic: BluetoothCharacteristicUUID\n  ): Observable<void | BluetoothRemoteGATTCharacteristic> {\n    this.console.log('[BLE::Info] Getting Characteristic \"%s\" of %o', characteristic, primaryService);\n\n    return from(this.getCharacteristic(primaryService, characteristic));\n  }\n\n  /**\n   * Sets the characteristic's state.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic\n   * @param state An ArrayBuffer containing the value of the characteristic.\n   * @return The primary service (useful for chaining).\n   */\n  setCharacteristicState(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state: ArrayBuffer) {\n    const primaryService = this.getPrimaryService$(this.gattServer, service);\n\n    primaryService\n      // tslint:disable-next-line: variable-name\n      .pipe(mergeMap((_primaryService: BluetoothRemoteGATTService) => this.getCharacteristic$(_primaryService, characteristic)))\n      // tslint:disable-next-line: no-shadowed-variable\n      .subscribe((characteristic: BluetoothRemoteGATTCharacteristic) => this.writeValue$(characteristic, state));\n\n    return primaryService;\n  }\n\n  /**\n   * Enables the specified characteristic of a given service.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic\n   * @return The primary service (useful for chaining).\n   */\n  enableCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\n    state = state || new Uint8Array([1]);\n    return this.setCharacteristicState(service, characteristic, state);\n  }\n\n  /**\n   * Disables the specified characteristic of a given service.\n   *\n   * @param service The parent service of the characteristic.\n   * @param characteristic The requested characteristic.\n   * @return The primary service (useful for chaining).\n   */\n  disbaleCharacteristic(service: BluetoothServiceUUID, characteristic: BluetoothCharacteristicUUID, state?: any) {\n    state = state || new Uint8Array([0]);\n    return this.setCharacteristicState(service, characteristic, state);\n  }\n\n  /**\n   * Dispatches new values emitted by a characteristic.\n   *\n   * @param event the distpatched event.\n   */\n  onCharacteristicChanged(event: Event) {\n    this.console.log('[BLE::Info] Dispatching new characteristic value %o', event);\n\n    const value = (event.target as BluetoothRemoteGATTCharacteristic).value;\n    this.characteristicValueChanges$.emit(value);\n  }\n\n  /**\n   * Reads a value from the characteristics, as a DataView.\n   *\n   * @param characteristic The requested characteristic.\n   * @return the DataView value (as an Observable).\n   */\n  readValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n    this.console.log('[BLE::Info] Reading Characteristic %o', characteristic);\n\n    return from(\n      characteristic\n        .readValue()\n        .then((data: DataView) => Promise.resolve(data), (error: DOMException) => Promise.reject(`${error.message}`))\n    );\n  }\n\n  /**\n   * Writes a value into the specified characteristic.\n   *\n   * @param characteristic The requested characteristic.\n   * @param value The value to be written (as an ArrayBuffer or Uint8Array).\n   * @return an void Observable.\n   */\n  writeValue$(characteristic: BluetoothRemoteGATTCharacteristic, value: ArrayBuffer | Uint8Array) {\n    this.console.log('[BLE::Info] Writing Characteristic %o', characteristic);\n\n    return from(characteristic.writeValue(value).then(_ => Promise.resolve(), (error: DOMException) => Promise.reject(`${error.message}`)));\n  }\n\n  /**\n   * A stream of DataView values emitted by the specified characteristic.\n   *\n   * @param characteristic The characteristic which value you want to observe\n   * @return The stream of DataView values.\n   */\n  observeValue$(characteristic: BluetoothRemoteGATTCharacteristic): Observable<DataView> {\n    characteristic.startNotifications();\n    const disconnected = fromEvent(characteristic.service.device, 'gattserverdisconnected');\n    return fromEvent(characteristic, 'characteristicvaluechanged')\n      .pipe(\n        map((event: Event) => (event.target as BluetoothRemoteGATTCharacteristic).value as DataView),\n        takeUntil(disconnected)\n      );\n  }\n\n  /**\n   * A utility method to convert LE to an unsigned 16-bit integer values.\n   *\n   * @param data The DataView binary data.\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\n   * @return An unsigned 16-bit integer number.\n   */\n  littleEndianToUint16(data: any, byteOffset: number): number {\n    // tslint:disable-next-line:no-bitwise\n    return (this.littleEndianToUint8(data, byteOffset + 1) << 8) + this.littleEndianToUint8(data, byteOffset);\n  }\n\n  /**\n   * A utility method to convert LE to an unsigned 8-bit integer values.\n   *\n   * @param data The DataView binary data.\n   * @param byteOffset The offset, in byte, from the start of the view where to read the data.\n   * @return An unsigned 8-bit integer number.\n   */\n  littleEndianToUint8(data: any, byteOffset: number): number {\n    return data.getUint8(byteOffset);\n  }\n\n  /**\n   * Sends random data (for testing purposes only).\n   *\n   * @return Random unsigned 8-bit integer values.\n   */\n  fakeNext(fakeValue?: () => DataView) {\n    if (fakeValue === undefined) {\n      fakeValue = () => {\n        const dv = new DataView(new ArrayBuffer(8));\n        // tslint:disable-next-line:no-bitwise\n        dv.setUint8(0, (Math.random() * 110) | 0);\n        return dv;\n      };\n    }\n\n    this.characteristicValueChanges$.emit(fakeValue());\n  }\n}\n","import { NgModule, ModuleWithProviders, InjectionToken, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BluetoothCore } from './bluetooth.service';\nimport { BrowserWebBluetooth } from './platform/browser';\n\nimport { ConsoleLoggerService, NoLoggerService } from './logger.service';\n\nexport interface AWBOptions {\n  enableTracing?: boolean;\n}\n\nexport function browserWebBluetooth() {\n  return new BrowserWebBluetooth();\n}\n\nexport function consoleLoggerServiceConfig(options: AWBOptions) {\n  if (options && options.enableTracing) {\n    return new ConsoleLoggerService();\n  } else {\n    return new NoLoggerService();\n  }\n}\nexport function makeMeTokenInjector() {\n  return new InjectionToken('AWBOptions');\n}\n\n@NgModule({\n  imports: [CommonModule]\n})\nexport class WebBluetoothModule {\n  static forRoot(options: AWBOptions = {}): ModuleWithProviders {\n    return {\n      ngModule: WebBluetoothModule,\n      providers: [\n        BluetoothCore,\n        {\n          provide: BrowserWebBluetooth,\n          useFactory: browserWebBluetooth\n        },\n        {\n          provide: makeMeTokenInjector,\n          useValue: options\n        },\n        {\n          provide: ConsoleLoggerService,\n          useFactory: consoleLoggerServiceConfig,\n          deps: [makeMeTokenInjector]\n        }\n      ]\n    };\n  }\n}\n","// http://processors.wiki.ti.com/images/a/a8/BLE_SensorTag_GATT_Server.pdf\n\n// prettier-ignore\nexport const TiTag = {\n\n  DEVICE_INFORMATION : {\n    SERVICE :                 'f000180a-0451-4000-b000-000000000000',\n    SYSTEM_ID :               'f0002a23-0451-4000-b000-000000000000',\n    MODEL_NUMBER :            'f0002a24-0451-4000-b000-000000000000',\n    SERIAL_NUMBER :           'f0002a25-0451-4000-b000-000000000000',\n    FIRMWARE_REV :            'f0002a26-0451-4000-b000-000000000000',\n    HARDWARE_REV :            'f0002a27-0451-4000-b000-000000000000',\n    SOFTWARE_REV :            'f0002a28-0451-4000-b000-000000000000',\n    MANIFACTURER :            'f0002a29-0451-4000-b000-000000000000',\n    IEEE11073 :               'f0002a2a-0451-4000-b000-000000000000',\n    PNP_ID :                  'f0002a50-0451-4000-b000-000000000000'\n  },\n\n  BATTERY : {\n    SERVICE :                 'f000180f-0451-4000-b000-000000000000',\n    LEVEL :                   'f0002a19-0451-4000-b000-000000000000'\n  },\n\n  TEMPERATURE : {\n    SERVICE :                 'f000aa00-0451-4000-b000-000000000000',\n    DATA :                    'f000aa01-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa02-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa03-0451-4000-b000-000000000000'\n  },\n\n  HUMIDITY : {\n    SERVICE :                 'f000aa20-0451-4000-b000-000000000000',\n    DATA :                    'f000aa21-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa22-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa23-0451-4000-b000-000000000000'\n  },\n\n  BAROMETER : {\n    SERVICE :                 'f000aa40-0451-4000-b000-000000000000',\n    DATA :                    'f000aa41-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa42-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa44-0451-4000-b000-000000000000'\n  },\n\n  // service not available in model CC2650\n  // ACCELEROMETER : {\n  //   SERVICE :                 'f000aa10-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa11-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa12-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa13-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // MAGNETOMETER : {\n  //   SERVICE :                 'f000aa30-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa31-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa32-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa33-0451-4000-b000-000000000000'\n  // },\n\n  // service not available in model CC2650\n  // GYROSCOPE : {\n  //   SERVICE :                 'f000aa50-0451-4000-b000-000000000000',\n  //   DATA :                    'f000aa51-0451-4000-b000-000000000000',\n  //   CONFIGURATION :           'f000aa52-0451-4000-b000-000000000000',\n  //   PERIOD :                  'f000aa53-0451-4000-b000-000000000000'\n  // },\n\n  MOVEMENT : {\n    SERVICE :                 'f000aa80-0451-4000-b000-000000000000',\n    DATA :                    'f000aa81-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa82-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa83-0451-4000-b000-000000000000'\n  },\n\n  LIGHT : {\n    SERVICE :                 'f000aa70-0451-4000-b000-000000000000',\n    DATA :                    'f000aa71-0451-4000-b000-000000000000',\n    CONFIGURATION :           'f000aa72-0451-4000-b000-000000000000',\n    PERIOD :                  'f000aa73-0451-4000-b000-000000000000'\n  },\n\n  KEYPRESS : {\n    SERVICE :                 'f000ffe0-0451-4000-b000-000000000000',\n    STATE :                   'f000ffe1-0451-4000-b000-000000000000'\n  },\n\n  __REGISTER__ : {\n    SERVICE :                 'f000ac00-0451-4000-b000-000000000000',\n    DATA :                    'f000ac01-0451-4000-b000-000000000000',\n    ADDRESS :                 'f000ac02-0451-4000-b000-000000000000',\n    DEVICE_ID :               'f000ac03-0451-4000-b000-000000000000'\n  },\n\n  CONTROL : {\n    SERVICE :                 'f000ccc0-0451-4000-b000-000000000000',\n    CURRENT_USED_PARAMETERS : 'f000ccc1-0451-4000-b000-000000000000',\n    REQUEST_NEW_PARAMETERS :  'f000ccc2-0451-4000-b000-000000000000',\n    DISCONNECT_REQUEST :      'f000ccc3-0451-4000-b000-000000000000'\n  },\n\n  OAD : {\n    SERVICE :                 'f000ffc0-0451-4000-b000-000000000000',\n    IMAGE_NOTIFY :            'f000ffc1-0451-4000-b000-000000000000',\n    IMAGE_BLOCK_REQUEST :     'f000ffc2-0451-4000-b000-000000000000',\n    IMAGE_COUNT :             'f000ffc3-0451-4000-b000-000000000000',\n    IMAGE_STATUS :            'f000ffc4-0451-4000-b000-000000000000'\n  },\n\n  IO : {\n    SERVICE :                 'f000aa64-0451-4000-b000-000000000000',\n    DATA :                    'f000aa65-0451-4000-b000-000000000000',\n    CONFIG :                  'f000aa66-0451-4000-b000-000000000000'\n  }\n};\n\nexport const TI_SENSORAG_SERVICES = Object.keys(TiTag).map(key => TiTag[key].SERVICE);\n"]}