/**
 * @fileoverview added by tsickle
 * Generated from: lib/logger.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * @record
 */
export function Logger() { }
if (false) {
    /**
     * @param {?} args
     * @return {?}
     */
    Logger.prototype.log = function (args) { };
    /**
     * @param {?} args
     * @return {?}
     */
    Logger.prototype.error = function (args) { };
    /**
     * @param {?} args
     * @return {?}
     */
    Logger.prototype.warn = function (args) { };
}
export class ConsoleLoggerService {
    /**
     * @param {...?} args
     * @return {?}
     */
    log(...args) {
        console.log.apply(console, args);
    }
    /**
     * @param {...?} args
     * @return {?}
     */
    error(...args) {
        console.error.apply(console, args);
    }
    /**
     * @param {...?} args
     * @return {?}
     */
    warn(...args) {
        console.warn.apply(console, args);
    }
}
ConsoleLoggerService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ ConsoleLoggerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function ConsoleLoggerService_Factory() { return new ConsoleLoggerService(); }, token: ConsoleLoggerService, providedIn: "root" });
export class NoLoggerService {
    /**
     * @param {...?} args
     * @return {?}
     */
    log(...args) { }
    /**
     * @param {...?} args
     * @return {?}
     */
    error(...args) { }
    /**
     * @param {...?} args
     * @return {?}
     */
    warn(...args) { }
}
NoLoggerService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */ NoLoggerService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NoLoggerService_Factory() { return new NoLoggerService(); }, token: NoLoggerService, providedIn: "root" });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9nZ2VyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AbWFuZWtpbmVra28vYW5ndWxhci13ZWItYmx1ZXRvb3RoLyIsInNvdXJjZXMiOlsibGliL2xvZ2dlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7Ozs7QUFFM0MsNEJBSUM7Ozs7OztJQUhDLDJDQUEwQjs7Ozs7SUFDMUIsNkNBQTRCOzs7OztJQUM1Qiw0Q0FBMkI7O0FBTTdCLE1BQU0sT0FBTyxvQkFBb0I7Ozs7O0lBQy9CLEdBQUcsQ0FBQyxHQUFHLElBQUk7UUFDVCxPQUFPLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDbkMsQ0FBQzs7Ozs7SUFDRCxLQUFLLENBQUMsR0FBRyxJQUFJO1FBQ1gsT0FBTyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO0lBQ3JDLENBQUM7Ozs7O0lBQ0QsSUFBSSxDQUFDLEdBQUcsSUFBSTtRQUNWLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLE9BQU8sRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNwQyxDQUFDOzs7WUFaRixVQUFVLFNBQUM7Z0JBQ1YsVUFBVSxFQUFFLE1BQU07YUFDbkI7OztBQWdCRCxNQUFNLE9BQU8sZUFBZTs7Ozs7SUFDMUIsR0FBRyxDQUFDLEdBQUcsSUFBSSxJQUFHLENBQUM7Ozs7O0lBQ2YsS0FBSyxDQUFDLEdBQUcsSUFBSSxJQUFHLENBQUM7Ozs7O0lBQ2pCLElBQUksQ0FBQyxHQUFHLElBQUksSUFBRyxDQUFDOzs7WUFOakIsVUFBVSxTQUFDO2dCQUNWLFVBQVUsRUFBRSxNQUFNO2FBQ25CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5leHBvcnQgaW50ZXJmYWNlIExvZ2dlciB7XG4gIGxvZyhhcmdzOiBzdHJpbmdbXSk6IHZvaWQ7XG4gIGVycm9yKGFyZ3M6IHN0cmluZ1tdKTogdm9pZDtcbiAgd2FybihhcmdzOiBzdHJpbmdbXSk6IHZvaWQ7XG59XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnXG59KVxuZXhwb3J0IGNsYXNzIENvbnNvbGVMb2dnZXJTZXJ2aWNlIGltcGxlbWVudHMgTG9nZ2VyIHtcbiAgbG9nKC4uLmFyZ3MpIHtcbiAgICBjb25zb2xlLmxvZy5hcHBseShjb25zb2xlLCBhcmdzKTtcbiAgfVxuICBlcnJvciguLi5hcmdzKSB7XG4gICAgY29uc29sZS5lcnJvci5hcHBseShjb25zb2xlLCBhcmdzKTtcbiAgfVxuICB3YXJuKC4uLmFyZ3MpIHtcbiAgICBjb25zb2xlLndhcm4uYXBwbHkoY29uc29sZSwgYXJncyk7XG4gIH1cbn1cblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCdcbn0pXG5leHBvcnQgY2xhc3MgTm9Mb2dnZXJTZXJ2aWNlIGltcGxlbWVudHMgTG9nZ2VyIHtcbiAgbG9nKC4uLmFyZ3MpIHt9XG4gIGVycm9yKC4uLmFyZ3MpIHt9XG4gIHdhcm4oLi4uYXJncykge31cbn1cbiJdfQ==